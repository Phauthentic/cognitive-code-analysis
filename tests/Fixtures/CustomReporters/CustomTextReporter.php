<?php

declare(strict_types=1);

namespace Tests\Fixtures\CustomReporters;

use Phauthentic\CognitiveCodeAnalysis\Business\Cognitive\Report\ReportGeneratorInterface;
use Phauthentic\CognitiveCodeAnalysis\Business\Cognitive\CognitiveMetricsCollection;
use Phauthentic\CognitiveCodeAnalysis\CognitiveAnalysisException;

/**
 * Custom text reporter for testing integration with CLI commands.
 * Exports cognitive metrics in a simple text format.
 */
class CustomTextReporter implements ReportGeneratorInterface
{
    public function export(CognitiveMetricsCollection $metrics, string $filename): void
    {
        // Ensure directory exists
        $directory = dirname($filename);
        if (!is_dir($directory)) {
            throw new CognitiveAnalysisException("Directory {$directory} does not exist");
        }

        // Generate text content
        $content = $this->generateTextContent($metrics);

        // Write to file
        if (file_put_contents($filename, $content) === false) {
            throw new CognitiveAnalysisException("Could not write to file: {$filename}");
        }
    }

    private function generateTextContent(CognitiveMetricsCollection $metrics): string
    {
        $content = "=== Cognitive Complexity Report ===\n";
        $content .= "Generated by CustomTextReporter\n";
        $content .= "=====================================\n\n";

        $totalMethods = 0;
        $totalScore = 0.0;

        foreach ($metrics as $metric) {
            $content .= sprintf(
                "Class: %s, Method: %s, Score: %.2f\n",
                $metric->getClass(),
                $metric->getMethod(),
                $metric->getScore()
            );
            $totalMethods++;
            $totalScore += $metric->getScore();
        }

        $content .= "\n=====================================\n";
        $content .= sprintf("Total Methods: %d\n", $totalMethods);
        $content .= sprintf("Average Score: %.2f\n", $totalMethods > 0 ? $totalScore / $totalMethods : 0);
        $content .= "=====================================\n";

        return $content;
    }
}
