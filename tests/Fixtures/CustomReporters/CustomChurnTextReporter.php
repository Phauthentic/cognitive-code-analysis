<?php

declare(strict_types=1);

namespace Phauthentic\CognitiveCodeAnalysis\Tests\Fixtures\CustomReporters;

use Phauthentic\CognitiveCodeAnalysis\Business\Churn\Report\ReportGeneratorInterface;

/**
 * Custom text reporter for churn data testing
 */
class CustomChurnTextReporter implements ReportGeneratorInterface
{
    /**
     * @param array<string, array<string, mixed>> $classes
     */
    public function export(array $classes, string $filename): void
    {
        $content = $this->generateReport($classes);
        file_put_contents($filename, $content);
    }

    /**
     * @param array<string, array<string, mixed>> $classes
     */
    private function generateReport(array $classes): string
    {
        $output = "=== Custom Churn Analysis Report ===\n";
        $output .= "Generated by CustomChurnTextReporter\n\n";

        $output .= "Analysis Summary:\n";
        $output .= "Total Classes: " . count($classes) . "\n";

        $totalMethods = 0;
        foreach ($classes as $classData) {
            if (isset($classData['methods'])) {
                $totalMethods += count($classData['methods']);
            }
        }
        $output .= "Total Methods: " . $totalMethods . "\n\n";

        $output .= "Churn Analysis Results:\n";
        $output .= str_repeat("-", 50) . "\n";

        foreach ($classes as $className => $classData) {
            $output .= "Class: " . $className . "\n";
            $output .= "File: " . ($classData['file'] ?? 'Unknown') . "\n";
            $output .= "Score: " . ($classData['score'] ?? 'N/A') . "\n";
            $output .= "Churn: " . ($classData['churn'] ?? 'N/A') . "\n";
            $output .= "Times Changed: " . ($classData['timesChanged'] ?? 'N/A') . "\n";

            if (isset($classData['coverage'])) {
                $output .= "Coverage: " . ($classData['coverage'] ?? 'N/A') . "%\n";
            }

            if (isset($classData['riskLevel'])) {
                $output .= "Risk Level: " . ($classData['riskLevel'] ?? 'N/A') . "\n";
            }

            $output .= "\n";
        }

        return $output;
    }
}
